gcc hash.c && ./a.exe

#include <limits.h>

indent -kr -brf -i2 -l80 -nut somefile.c
indent -kr -brf -i2 -l80 -nut -R

A2 = {-10,4,6,-7}
A1 = {x : 1 <= x <= 1}
A = A | A1 Union
A = A & A1 Interseccion
A = A - A1 Resta
B1 = âˆ¼B1 Complemento
salir
imprimir A


gcc -std=c99 program.c program2.c -lm 
// El -lm es para linkear cosas raras de math.h

bibliografia:
https://cp-algorithms.com/string/string-hashing.html
https://www.smartick.es/blog/matematicas/numeros/numeros-primos-criba-eratostenes/#:~:text=Podemos%20determinar%20entonces%20que%20los,%2C%2083%2C%2089%20y%2097.


Cosas por hacer


valgrind --leak-check=yes myprog arg1 arg2


a = {1,2}
b = {}
a = ~a
b = ~b
c = a | b
imprimir c


a = {1,2,3,4}
b = {2,4,5,6}
d = a - b
imprimir d

A2 = {4,6}
B = {-8}
A22 = {-10,4,6,-7}
B = {-7}
A22 = {-10,4,6,-7}
B = {-7}
C = A22 & B
A22 = {-10,4,6,-7}
B = {-7}
C = B | A22
B = {x : 10 <= x <= 16}
A = {x : 18 <= x <= 105}
D = {1,2,3,4,5,6,7,8,9}
C = A | B
C = C | D
A = ~C


A = {x : 0 <= x <= 10}
B = {x : 5 <= x <= 15}
D = {10}
C = A | B
C = C & D
D = A - B
C = ~C
imprimir C
A 067
B = A & J


A = {1,2,3,4,5}
B = {3,4,5,6,7,8,9}
C = A & B
a = {5}
A = {-5,-4,-3,-2,-1,0,4,5,6,7,8,9,10}
B = {-5,-6,-7,-8,-9,0,1,2,6,7,8,9,10}
C = A | B
imprimir C

A = {1,2}
B = {2,3}
B = ~B
A = ~A
C = A | B
C = ~C
imprimir C

A = {x : 1 <= x <= 5}
C = A | B
C = C | D
C = A &

A = {1,2,3,4,5}
A = ~A



A = {x : -2 <= x <= 5}
imprimir A
-2:5
B = {-10,4,6,-7}
imprimir A
-10,-7,4,6
C = A | B
imprimir C
-10,-7,-2:5,6